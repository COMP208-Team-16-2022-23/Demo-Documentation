import{_ as c,M as l,p as d,q as p,R as e,t as n,N as a,U as o,a1 as i}from"./framework-efe98465.js";const u={},m=e("h1",{id:"installation-and-deployment-guide",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installation-and-deployment-guide","aria-hidden":"true"},"#"),n(" Installation and Deployment Guide")],-1),h=e("h2",{id:"before-starting-the-installation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#before-starting-the-installation","aria-hidden":"true"},"#"),n(" Before Starting the Installation")],-1),v={href:"https://www.lcda.space/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://cloud.google.com/run",target:"_blank",rel:"noopener noreferrer"},g={href:"https://cloud.google.com/storage",target:"_blank",rel:"noopener noreferrer"},f={href:"https://aws.amazon.com/rds/",target:"_blank",rel:"noopener noreferrer"},_=e("p",null,"Please note that deploying LCDA in the cloud requires a certain level of technical expertise, and it is recommended that you have experience with cloud services before attempting to deploy LCDA on your own.",-1),k=e("h2",{id:"prerequisites",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),n(" Prerequisites")],-1),C={href:"https://docs.conda.io/en/latest/miniconda.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.anaconda.com/products/distribution",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"Conda",-1),w={href:"https://www.python.org/",target:"_blank",rel:"noopener noreferrer"},S=e("code",null,"venv",-1),L={href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"},D={href:"https://cloud.google.com/run",target:"_blank",rel:"noopener noreferrer"},x={href:"https://cloud.google.com/storage",target:"_blank",rel:"noopener noreferrer"},E={href:"https://aws.amazon.com/rds/",target:"_blank",rel:"noopener noreferrer"},P=i(`<h2 id="installation-and-deployment-steps" tabindex="-1"><a class="header-anchor" href="#installation-and-deployment-steps" aria-hidden="true">#</a> Installation and Deployment Steps</h2><p>This section will help you step by step from scratch to deploying the LCDA platform.</p><ol><li><p>Create and change into a new directory</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> COMP208-202223-Team16
<span class="token builtin class-name">cd</span> COMP208-202223-Team16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Pull source code</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/COMP208-Team-16-2022-23/Group-Project-Code.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Change into project directory</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> Group-Project-Code
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Create and activate a Python virtual environment</p><p>You can choose either <code>venv</code> or <code>conda</code> to create a virtual environment.</p></li></ol><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li><code>venv</code> environment is suitable for <strong>short-term testing</strong> and can be deleted along with the project folder without affecting the system environment.</li><li><code>conda</code> environment is suitable for <strong>long-term development</strong> as it offers more comprehensive package management and environment management functions.</li></ul></div><h3 id="venv-virtual-environment" tabindex="-1"><a class="header-anchor" href="#venv-virtual-environment" aria-hidden="true">#</a> <code>venv</code> virtual environment</h3><p>This command will create a virtual environment in the current directory.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-m</span> venv <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Activate the virtual environment</p>`,8),I=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"source"),n(` ./bin/activate
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),T=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("."),e("span",{class:"token punctuation"},"\\"),n("Scripts"),e("span",{class:"token punctuation"},"\\"),n(`activate.bat
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),M=i(`<p>Install the required packages</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="conda-virtual-environment" tabindex="-1"><a class="header-anchor" href="#conda-virtual-environment" aria-hidden="true">#</a> <code>Conda</code> virtual environment</h3><p>Create a Conda virtual environment named <code>COMP208</code> with Python version 3.10.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda <span class="token function">env</span> create <span class="token parameter variable">-f</span> ./misc/environment.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Activate Conda virtual environment</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda activate COMP208
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),G={start:"5"},R=e("p",null,"Configure cloud services",-1),N=e("p",null,"LCDA was originally designed to be deployed in the cloud. Therefore, configuring cloud services is an essential part of running LCDA smoothly. For each cloud service configuration tutorial, please refer to its official documentation, which will not be repeated in this article.",-1),O={href:"https://aws.amazon.com/rds/",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html",target:"_blank",rel:"noopener noreferrer"},q={href:"https://cloud.google.com/storage",target:"_blank",rel:"noopener noreferrer"},F={href:"https://cloud.google.com/storage/docs",target:"_blank",rel:"noopener noreferrer"},z={href:"https://cloud.google.com/run",target:"_blank",rel:"noopener noreferrer"},B={href:"https://cloud.google.com/run/docs",target:"_blank",rel:"noopener noreferrer"},K=e("p",null,"Do not worry, many cloud service providers offer users a certain amount of free trial quota. If LCDA is only used for testing, there will be no additional expenses.",-1),V=i(`<li><p>Configure <code>/secret.py</code></p><p>Before you can deploy and run LCDA, you need to configure the <code>/secret.py</code> file with relevant information. This file contains sensitive information such as API keys, database passwords, and other secrets that are required for the proper functioning of the application. In this case, it also includes relevant Google Cloud information.</p><p>The following is an example of configuring <code>/secret.py</code>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> datetime <span class="token keyword">import</span> timedelta

<span class="token comment"># DOMAIN</span>
DOMAIN <span class="token operator">=</span> <span class="token string">&#39;Your google cloud run domain&#39;</span>

SECRET_KEY <span class="token operator">=</span> <span class="token string">&#39;Your secret key (i.e. a random string)&#39;</span>
PERMANENT_SESSION_LIFETIME <span class="token operator">=</span> timedelta<span class="token punctuation">(</span>minutes<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>

<span class="token comment"># Configuration for the database</span>
HOSTNAME <span class="token operator">=</span> <span class="token string">&#39;Your database hostname&#39;</span>
PORT <span class="token operator">=</span> <span class="token string">&#39;Your database port&#39;</span>
DATABASE <span class="token operator">=</span> <span class="token string">&#39;Your database name&#39;</span>
USERNAME <span class="token operator">=</span> <span class="token string">&#39;Your database account username&#39;</span>
PASSWORD <span class="token operator">=</span> <span class="token string">&#39;Your database account password&#39;</span>
LOCAL_TEST <span class="token operator">=</span> <span class="token boolean">False</span>  <span class="token comment"># set to True will ignore the above configuration and use local sqlite database called project.db</span>

<span class="token comment"># Configuration variables for email</span>
<span class="token comment"># configure the mail settings</span>
MAIL_SERVER <span class="token operator">=</span> <span class="token string">&#39;Your email server&#39;</span>
MAIL_PORT <span class="token operator">=</span> <span class="token number">465</span> <span class="token comment"># Your email server port</span>
MAIL_USE_SSL <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token comment"># Whether your email server uses SSL</span>
MAIL_USERNAME <span class="token operator">=</span> <span class="token string">&#39;Your email address&#39;</span>
MAIL_PASSWORD <span class="token operator">=</span> <span class="token string">&#39;Your email account password&#39;</span> 
MAIL_DEFAULT_SENDER <span class="token operator">=</span> <span class="token string">&#39;LCDA Team&#39;</span>
MAIL_MAX_EMAILS <span class="token operator">=</span> <span class="token boolean">None</span>

<span class="token comment"># Configuration variables for Google Cloud Storage</span>
GOOGLE_APPLICATION_CREDENTIALS <span class="token operator">=</span> <span class="token punctuation">{</span>
 <span class="token comment"># Your service account key, in json format.</span>
<span class="token punctuation">}</span>
BUCKET_NAME <span class="token operator">=</span> <span class="token string">&#39;Your Google Cloud Storage bucket name&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),U=e("p",null,"Deploy LCDA locally",-1),j=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"export"),n(),e("span",{class:"token assign-left variable"},"FLASK_APP"),e("span",{class:"token operator"},"="),n(`app.py
`),e("span",{class:"token builtin class-name"},"export"),n(),e("span",{class:"token assign-left variable"},"FLASK_ENV"),e("span",{class:"token operator"},"="),n(`development
flask run
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),W=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"set"),n(),e("span",{class:"token assign-left variable"},"FLASK_APP"),e("span",{class:"token operator"},"="),n(`app.py
`),e("span",{class:"token builtin class-name"},"set"),n(),e("span",{class:"token assign-left variable"},"FLASK_ENV"),e("span",{class:"token operator"},"="),n(`development
flask run
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),H=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token variable"},"$env"),n(":FLASK_APP "),e("span",{class:"token operator"},"="),n(),e("span",{class:"token string"},'"app.py"'),n(`
`),e("span",{class:"token variable"},"$env"),n(":FLASK_ENV "),e("span",{class:"token operator"},"="),n(),e("span",{class:"token string"},'"development"'),n(`
flask run
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),$={href:"http://127.0.0.1:5000",target:"_blank",rel:"noopener noreferrer"};function X(J,Q){const s=l("ExternalLinkIcon"),t=l("CodeGroupItem"),r=l("CodeGroup");return d(),p("div",null,[m,h,e("p",null,[n("The quickest way to use LCDA is to directly visit the "),e("a",v,[n("official website of LCDA"),a(s)]),n(".")]),e("p",null,[n("However, if you want to deploy your own LCDA, it is essential to ensure that you can create and configure the following instances: "),e("a",b,[n("Google Cloud Run"),a(s)]),n(", "),e("a",g,[n("Google Cloud Storage"),a(s)]),n(", and a publicly accessible database such as "),e("a",f,[n("Amazon RDS"),a(s)]),n(".")]),_,k,e("ul",null,[e("li",null,[e("p",null,[e("a",C,[n("Miniconda"),a(s)]),n(" v23.1.0+ or "),e("a",y,[n("Anaconda"),a(s)]),n(" v23.1.0+ if you use "),A,n(" virtual environment")])]),e("li",null,[e("p",null,[e("a",w,[n("Python"),a(s)]),n(" v3.7+ if you use "),S,n(" virtual environment")])]),e("li",null,[e("p",null,[e("a",L,[n("Git"),a(s)]),n(" v2.30+")])]),e("li",null,[e("p",null,[e("a",D,[n("Google Cloud Run"),a(s)])])]),e("li",null,[e("p",null,[e("a",x,[n("Google Cloud Storage"),a(s)])])]),e("li",null,[e("p",null,[e("a",E,[n("Amazon RDS"),a(s)])])])]),P,a(r,null,{default:o(()=>[a(t,{title:"Bash",active:""},{default:o(()=>[I]),_:1}),a(t,{title:"CMD"},{default:o(()=>[T]),_:1})]),_:1}),M,e("ol",G,[e("li",null,[R,N,e("ul",null,[e("li",null,[e("p",null,[e("a",O,[n("Amazon RDS"),a(s)]),n(": LCDA uses Amazon RDS to host the website database. Detailed database configuration tutorials can be found in the "),e("a",Y,[n("official documentation"),a(s)]),n(". However, users can also choose other cloud hosting service providers for their database needs.")])]),e("li",null,[e("p",null,[e("a",q,[n("Google Cloud Storage"),a(s)]),n(": LCDA uses Google Cloud Storage as the storage server for the website. Detailed tutorials on using Google Cloud Storage can be found in the "),e("a",F,[n("official documentation"),a(s)]),n(".")])]),e("li",null,[e("p",null,[e("a",z,[n("Google Cloud Run"),a(s)]),n(": LCDA uses Google Cloud Run to host and deploy the website. A detailed tutorial on using Google Cloud Run can be found in the "),e("a",B,[n("official documentation"),a(s)]),n(".")])])]),K]),V,e("li",null,[U,a(r,null,{default:o(()=>[a(t,{title:"Bash",active:""},{default:o(()=>[j]),_:1}),a(t,{title:"CMD"},{default:o(()=>[W]),_:1}),a(t,{title:"Powershell"},{default:o(()=>[H]),_:1})]),_:1})])]),e("p",null,[n("You're done! Now you can visit "),e("a",$,[n("http://127.0.0.1:5000"),a(s)]),n(" in your browser to access LCDA.")])])}const ee=c(u,[["render",X],["__file","installation.html.vue"]]);export{ee as default};
