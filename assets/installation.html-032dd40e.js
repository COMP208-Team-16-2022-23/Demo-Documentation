import{_ as c,M as t,p as d,q as p,R as e,t as n,N as s,U as o,a1 as r}from"./framework-efe98465.js";const u={},m=e("h1",{id:"安装和部署指南",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装和部署指南","aria-hidden":"true"},"#"),n(" 安装和部署指南")],-1),v=e("h2",{id:"在开始安装之前",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#在开始安装之前","aria-hidden":"true"},"#"),n(" 在开始安装之前")],-1),h={href:"https://www.lcda.space/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://cloud.google.com/run",target:"_blank",rel:"noopener noreferrer"},g={href:"https://cloud.google.com/storage",target:"_blank",rel:"noopener noreferrer"},_={href:"https://aws.amazon.com/rds/",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,"请注意，在云中部署 LCDA 需要一定的技术专业知识水平，建议您在尝试自行部署 LCDA 之前具有云服务经验。",-1),f=e("h2",{id:"依赖环境",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#依赖环境","aria-hidden":"true"},"#"),n(" 依赖环境")],-1),A={href:"https://docs.conda.io/en/latest/miniconda.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.anaconda.com/products/distribution",target:"_blank",rel:"noopener noreferrer"},S=e("code",null,"Conda",-1),L={href:"https://www.python.org/",target:"_blank",rel:"noopener noreferrer"},E=e("code",null,"venv",-1),D={href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"},x={href:"https://cloud.google.com/run",target:"_blank",rel:"noopener noreferrer"},M={href:"https://cloud.google.com/storage",target:"_blank",rel:"noopener noreferrer"},P={href:"https://aws.amazon.com/rds/",target:"_blank",rel:"noopener noreferrer"},R=r(`<h2 id="安装和部署步骤" tabindex="-1"><a class="header-anchor" href="#安装和部署步骤" aria-hidden="true">#</a> 安装和部署步骤</h2><p>这一章节会帮助你从零开始一步步直到本地部署 LCDA 平台。</p><ol><li><p>创建并进入一个新目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> COMP208-202223-Team16
<span class="token builtin class-name">cd</span> COMP208-202223-Team16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>拉取源代码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/COMP208-Team-16-2022-23/Group-Project-Code.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>进入项目文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> Group-Project-Code
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>创建并激活Python虚拟环境</p><p>你可以选择 <code>venv</code> 或 <code>conda</code> 来创建一个虚拟环境。</p></li></ol><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li><code>venv</code> 适合用于<strong>短期测试</strong>，可随项目文件夹一起删除，不会影响系统环境。</li><li><code>conda</code> 适合用于<strong>长期开发</strong>，拥有更加完善的包管理功能和环境管理功能。</li></ul></div><h3 id="venv虚拟环境" tabindex="-1"><a class="header-anchor" href="#venv虚拟环境" aria-hidden="true">#</a> <code>venv</code>虚拟环境</h3><p>这个命令将在当前目录下创建一个虚拟环境。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-m</span> venv <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>激活虚拟环境</p>`,8),G=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"source"),n(` ./bin/activate
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),w=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("."),e("span",{class:"token punctuation"},"\\"),n("Scripts"),e("span",{class:"token punctuation"},"\\"),n(`activate.bat
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),I=r(`<p>安装所需的软件包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="conda虚拟环境" tabindex="-1"><a class="header-anchor" href="#conda虚拟环境" aria-hidden="true">#</a> <code>Conda</code>虚拟环境</h3><p>创建一个名为 &quot;COMP208 &quot;的Conda虚拟环境，Python版本为3.10。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda <span class="token function">env</span> create <span class="token parameter variable">-f</span> ./misc/environment.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>激活Conda虚拟环境</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda activate COMP208
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),N={start:"5"},y=e("p",null,"配置云服务",-1),T=e("p",null,"LCDA 设计初衷就是为了在云端部署，想要顺利运行 LCDA ，配置云服务是必不可少的一部分。各个云服务配置教程请参考其官方文档，本文不再重复赘述。",-1),O={href:"https://aws.amazon.com/rds/",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html",target:"_blank",rel:"noopener noreferrer"},z={href:"https://cloud.google.com/storage",target:"_blank",rel:"noopener noreferrer"},F={href:"https://cloud.google.com/storage/docs",target:"_blank",rel:"noopener noreferrer"},K={href:"https://cloud.google.com/run",target:"_blank",rel:"noopener noreferrer"},V={href:"https://cloud.google.com/run/docs",target:"_blank",rel:"noopener noreferrer"},B=r(`<li><p>配置 <code>secret.py</code></p><p>在部署和运行LCDA之前，你需要在 <code>/secret.py</code> 文件中配置相关信息。这个文件包含敏感信息，如API密钥、数据库密码和其他应用程序正常运行所需的秘密。在这种情况下，它还包括相关的谷歌云信息。</p><p>下面是配置 <code>/secret.py</code> 的样例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> datetime <span class="token keyword">import</span> timedelta

<span class="token comment"># DOMAIN</span>
DOMAIN <span class="token operator">=</span> <span class="token string">&#39;Your google cloud run domain&#39;</span>

SECRET_KEY <span class="token operator">=</span> <span class="token string">&#39;Your secret key (i.e. a random string)&#39;</span>
PERMANENT_SESSION_LIFETIME <span class="token operator">=</span> timedelta<span class="token punctuation">(</span>minutes<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>

<span class="token comment"># Configuration for the database</span>
HOSTNAME <span class="token operator">=</span> <span class="token string">&#39;Your database hostname&#39;</span>
PORT <span class="token operator">=</span> <span class="token string">&#39;Your database port&#39;</span>
DATABASE <span class="token operator">=</span> <span class="token string">&#39;Your database name&#39;</span>
USERNAME <span class="token operator">=</span> <span class="token string">&#39;Your database account username&#39;</span>
PASSWORD <span class="token operator">=</span> <span class="token string">&#39;Your database account password&#39;</span>
LOCAL_TEST <span class="token operator">=</span> <span class="token boolean">False</span>  <span class="token comment"># set to True will ignore the above configuration and use local sqlite database called project.db</span>

<span class="token comment"># Configuration variables for email</span>
<span class="token comment"># configure the mail settings</span>
MAIL_SERVER <span class="token operator">=</span> <span class="token string">&#39;Your email server&#39;</span>
MAIL_PORT <span class="token operator">=</span> <span class="token number">465</span> <span class="token comment"># Your email server port</span>
MAIL_USE_SSL <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token comment"># Whether your email server uses SSL</span>
MAIL_USERNAME <span class="token operator">=</span> <span class="token string">&#39;Your email address&#39;</span>
MAIL_PASSWORD <span class="token operator">=</span> <span class="token string">&#39;Your email account password&#39;</span> 
MAIL_DEFAULT_SENDER <span class="token operator">=</span> <span class="token string">&#39;LCDA Team&#39;</span>
MAIL_MAX_EMAILS <span class="token operator">=</span> <span class="token boolean">None</span>

<span class="token comment"># Configuration variables for Google Cloud Storage</span>
GOOGLE_APPLICATION_CREDENTIALS <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment"># Your service account key, in json format.</span>
<span class="token punctuation">}</span>
BUCKET_NAME <span class="token operator">=</span> <span class="token string">&#39;Your Google Cloud Storage bucket name&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),U=e("p",null,"本地部署 LCDA",-1),q=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"export"),n(),e("span",{class:"token assign-left variable"},"FLASK_APP"),e("span",{class:"token operator"},"="),n(`app.py
`),e("span",{class:"token builtin class-name"},"export"),n(),e("span",{class:"token assign-left variable"},"FLASK_ENV"),e("span",{class:"token operator"},"="),n(`development
flask run
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),j=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"set"),n(),e("span",{class:"token assign-left variable"},"FLASK_APP"),e("span",{class:"token operator"},"="),n(`app.py
`),e("span",{class:"token builtin class-name"},"set"),n(),e("span",{class:"token assign-left variable"},"FLASK_ENV"),e("span",{class:"token operator"},"="),n(`development
flask run
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),W=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token variable"},"$env"),n(":FLASK_APP "),e("span",{class:"token operator"},"="),n(),e("span",{class:"token string"},'"app.py"'),n(`
`),e("span",{class:"token variable"},"$env"),n(":FLASK_ENV "),e("span",{class:"token operator"},"="),n(),e("span",{class:"token string"},'"development"'),n(`
flask run
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),$={href:"http://127.0.0.1:5000",target:"_blank",rel:"noopener noreferrer"};function H(X,J){const a=t("ExternalLinkIcon"),l=t("CodeGroupItem"),i=t("CodeGroup");return d(),p("div",null,[m,v,e("p",null,[n("使用和体验 LCDA 最简单的办法：直接访问 "),e("a",h,[n("LCDA 官网"),s(a)]),n(" 。")]),e("p",null,[n("如果你依然想要部署属于自己的 LCDA ，请确保你能够创建并配置以下实例："),e("a",b,[n("Google Cloud Run"),s(a)]),n(" ， "),e("a",g,[n("Google Cloud Storage"),s(a)]),n(" ， 以及一个可以公网访问的数据库，如 "),e("a",_,[n("Amazon RDS"),s(a)]),n(" 。")]),k,f,e("ul",null,[e("li",null,[e("p",null,[e("a",A,[n("Miniconda"),s(a)]),n(" v23.1.0+ 或 "),e("a",C,[n("Anaconda"),s(a)]),n(" v23.1.0+ 如果你使用"),S,n("虚拟环境")])]),e("li",null,[e("p",null,[e("a",L,[n("Python"),s(a)]),n(" v3.7+ 如果你使用"),E,n("虚拟环境")])]),e("li",null,[e("p",null,[e("a",D,[n("Git"),s(a)]),n(" v2.30+")])]),e("li",null,[e("p",null,[e("a",x,[n("Google Cloud Run"),s(a)])])]),e("li",null,[e("p",null,[e("a",M,[n("Google Cloud Storage"),s(a)])])]),e("li",null,[e("p",null,[e("a",P,[n("Amazon RDS"),s(a)])])])]),R,s(i,null,{default:o(()=>[s(l,{title:"Bash",active:""},{default:o(()=>[G]),_:1}),s(l,{title:"CMD"},{default:o(()=>[w]),_:1})]),_:1}),I,e("ol",N,[e("li",null,[y,T,e("ul",null,[e("li",null,[e("p",null,[e("a",O,[n("Amazon RDS"),s(a)]),n("：LCDA 使用 Amazon RDS 托管网站数据库。详细的数据库配置教程请参考"),e("a",Y,[n("官方文档"),s(a)]),n(" 。当然，你也可以选择其他的数据库云托管服务供应商。")])]),e("li",null,[e("p",null,[e("a",z,[n("Google Cloud Storage"),s(a)]),n("：LCDA 使用 Google Cloud Storage 作为网站的存储服务器。详细的 Google Cloud Storage 使用教程请参考"),e("a",F,[n("官方文档"),s(a)]),n("。")])]),e("li",null,[e("p",null,[e("a",K,[n("Google Cloud Run"),s(a)]),n("：LCDA 使用 Google Cloud Run 托管并部署网站。详细的 Google Cloud Run 使用教程请参考"),e("a",V,[n("官方文档"),s(a)]),n("。")])])])]),B,e("li",null,[U,s(i,null,{default:o(()=>[s(l,{title:"Bash",active:""},{default:o(()=>[q]),_:1}),s(l,{title:"CMD"},{default:o(()=>[j]),_:1}),s(l,{title:"Powershell"},{default:o(()=>[W]),_:1})]),_:1})])]),e("p",null,[n("大功告成！现在即可在浏览器访问 "),e("a",$,[n("http://127.0.0.1:5000"),s(a)]),n(" 来访问 LCDA 了。")])])}const Z=c(u,[["render",H],["__file","installation.html.vue"]]);export{Z as default};
